name: Build Oculus Quest 3 Kernel

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  build-kernel:
    runs-on: ubuntu-latest
    
    steps:
    - name: Maximize build space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        df -h
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libncurses-dev \
          bison \
          flex \
          libssl-dev \
          libelf-dev \
          bc \
          kmod \
          cpio \
          git \
          wget \
          ccache \
          clang \
          llvm \
          lld \
          gcc-aarch64-linux-gnu \
          g++-aarch64-linux-gnu \
          binutils-aarch64-linux-gnu
    
    - name: Checkout Oculus Quest 3 Kernel
      uses: actions/checkout@v4
      with:
        repository: facebookincubator/oculus-linux-kernel
        ref: oculus-quest3-kernel-master
        fetch-depth: 1
    
    - name: Set up ccache
      uses: actions/cache@v3
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-ccache-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-ccache-
    
    - name: Configure kernel
      run: |
        ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC=clang LD=ld.lld LLVM=1 LLVM_IAS=1 make defconfig || \
        ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC=clang LD=ld.lld LLVM=1 LLVM_IAS=1 make quest3_defconfig || \
        ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC=clang LD=ld.lld LLVM=1 LLVM_IAS=1 make seurat_defconfig
    
    - name: Build kernel
      run: |
        export ARCH=arm64
        export CROSS_COMPILE=aarch64-linux-gnu-
        export CC=clang
        export LD=ld.lld
        export LLVM=1
        export LLVM_IAS=1
        export CCACHE_DIR=$HOME/.ccache
        make -j$(nproc) Image.gz dtbs modules
    
    - name: Build device tree blobs
      run: |
        export ARCH=arm64
        export CROSS_COMPILE=aarch64-linux-gnu-
        export CC=clang
        export LD=ld.lld
        export LLVM=1
        export LLVM_IAS=1
        make dtbs
    
    - name: Package kernel artifacts
      run: |
        mkdir -p kernel-output
        cp arch/arm64/boot/Image.gz kernel-output/
        cp vmlinux kernel-output/ 2>/dev/null || true
        cp arch/arm64/boot/dts/qcom/*.dtb kernel-output/ 2>/dev/null || true
        tar -czf kernel-quest3.tar.gz kernel-output/
    
    - name: Upload kernel artifacts
      uses: actions/upload-artifact@v4
      with:
        name: oculus-quest3-kernel
        path: |
          kernel-quest3.tar.gz
          kernel-output/Image.gz
          kernel-output/vmlinux
          kernel-output/*.dtb
        retention-days: 30
    
    - name: Display build info
      run: |
        ls -lh kernel-output/
        file kernel-output/Image.gz
        echo "Build completed successfully!"
